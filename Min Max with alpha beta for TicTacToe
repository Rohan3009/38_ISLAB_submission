Inputs - The Program Main.py does not take any input from user since the 'Bots' take their own decision on which move to make.

Outputs - After running the code 'Main.py' the output displayed is the name of the winner that is 'Bot1' or 'Bot2' or in some case it might even be a 'Draw'. After that a matrix of 3x3 is displayed to show the gameplay.

Recorded Output -

Draw                           Bot Two                          Bot One

['x', 'o', 'o']                ['o', None, 'x']                 ['x', 'x', None]

['o', 'x', 'x']                ['o', 'x', 'o']                  [None, None, 'x']

['x', 'x', 'o']                ['o', 'x', 'x']                  ['o', 'o', 'o']

Explanation - 

In the code, the programmer has used 2 bots (i.e. MinMax Bot & Dummy Bot).
Here 'Bot1' is the (MinMax Bot) while 'Bot2' is the (Dummy Bot).
Randomly any 1 of the bot makes a move where the 'Dummy Bot' chooses a position randomly while the 'MinMax Bot' uses minmax algorithm with alphabeta pruning to choose the best position.
After the bots make their moves, the 'TicTacToe.py' decides the winner until any one of the bot completes the moves in a single line as per rules and displays the result with the name of winner along with the 3x3 matrix form. In certain case where both the bots make all moves and yet fail to complete the task, the winner value is declared as draw.

Correction -

The matrix 3x3 form of result is not aligned properly due to the string 'None', instead of which some other character could be used such as '_' or      '-' to make it look better.
Each time the code 'Main.py' is executed, the Bots do not stick with the same char (i.e. 'X' & 'O') due to which identifying which bot uses which char is not possible. The programmer can mention it by using a print statement to tell which bot will use which character before the game starts.
